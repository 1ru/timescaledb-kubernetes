# This file and its contents are licensed under the Apache License 2.0.
# Please see the included NOTICE for copyright information and LICENSE for a copy of the license.
{{- /*
The purpose of this Secret is to have random passwords set for every
user mentioned in the spec.users section, in order for every installation to
be able to run to completion, as well as to generate secrets for

For production installs, it is recommended to not refer to these secrets, but
to generate your own secrets and refer to those in:
  spec.users.$username.password.valueFrom.secretKeyRef
*/ -}}
{{- if (index .Values.metadata.annotations "service.helm.timescale.com/generate-passwords") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "timescaledb.fullname" $ }}-users
  labels:
    {{- include "timescaledb.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
{{- $globalRoles := default .Values.spec.users dict -}}
{{- $defaultRoles := dict "postgres" dict "standby" dict -}}

{{- /*
The postgres and standby users are used by Patroni and are
part of the replication setups of the individual TimescaleDB
nodes. We therefore do not allow them to be defined globally.
*/ -}}
{{- range $roleName := $defaultRoles | keys }}
  {{- if hasKey $globalRoles $roleName }}
    {{ fail (printf "The following user cannot be set/configured, as it is used by Patroni: %s" ($roleName | quote)) }}
  {{- end }}
{{- end }}

{{- /*
We will generate (or store if specified) a password for every user.
*/ -}}
{{- range $key, $val := $globalRoles }}
{{- $role := (default $val dict) }}
{{- $password := $role.password | default dict }}
{{- if hasKey $password "value" }}
  {{ $key | quote }}: {{ $password.value | b64enc | quote }}
{{- else }}
  {{ $key | quote }}: {{ randAlphaNum 30 | b64enc | quote }}
{{- end }}
{{- end }}
...
{{- end }}
