# This file and its contents are licensed under the Apache License 2.0.
# Please see the included NOTICE for copyright information and LICENSE for a copy of the license.

{{- /*
These Certificates are used by PostgreSQL to serve SSL connections

The auto-generated certificates are generated once, as a pre-install hook, and
therefore are relatively static.

As these certificates are self-signed, they are only slightly more valuable than snake-oil:
The allow us to enforce the sslmode=require for all PostgreSQL connections.
To communicate this relative unsafeness of the certificates, they will immediately expire.

If trusted certificates are required, they should be created as a seperate secrets, and referred
to in the spec.nodes.$nodeName.certificate.secretKeyRef.name.

We create 2 certificates: 1 for the access node, and 1 for all the data nodes,
which ensures that if nodes are added to the deployment, they will have a certificate to use.
*/ -}}
{{- if (index .Values.metadata.annotations "service.helm.timescale.com/generate-certificates") }}
{{- range $nodeType := list "data" "access"}}
{{- $ca := genCA (printf "%s-%s" (include "timescaledb.fullname" $) $nodeType) 0 }}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ template "certificatePrefix" $ }}-{{ $nodeType }}
  labels:
    {{- include "timescaledb.labels" $ | nindent 4 }}
    timescaledb-node-type: {{ $nodeType }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  tls.crt: {{ $ca.Cert | b64enc }}
  tls.key: {{ $ca.Key  | b64enc }} 
...
{{- end }}
{{- end }}
  